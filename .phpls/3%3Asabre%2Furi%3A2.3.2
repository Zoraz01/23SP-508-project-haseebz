O:26:"LanguageServer\Index\Index":4:{s:11:"definitions";a:10:{s:9:"Sabre\Uri";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:9:"Sabre\Uri";s:7:"extends";N;s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:0;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:9:"Sabre\Uri";s:4:"kind";i:3;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:4;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:4;s:9:"character";i:20;}}}s:13:"containerName";s:5:"Sabre";}s:4:"type";N;s:15:"declarationLine";s:20:"namespace Sabre\Uri;";s:13:"documentation";N;s:20:"signatureInformation";N;}s:29:"Sabre\Uri\InvalidUriException";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:29:"Sabre\Uri\InvalidUriException";s:7:"extends";a:1:{i:0;s:9:"Exception";}s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:1;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:19:"InvalidUriException";s:4:"kind";i:5;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:129:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/InvalidUriException.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:16;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:18;s:9:"character";i:1;}}}s:13:"containerName";s:9:"Sabre\Uri";}s:4:"type";N;s:15:"declarationLine";s:44:"class InvalidUriException extends \Exception";s:13:"documentation";s:101:"Invalid Uri.

This is thrown when an attempt was made to use Sabre\Uri parse a uri that
it could not.";s:20:"signatureInformation";N;}s:17:"Sabre\Uri\Version";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:17:"Sabre\Uri\Version";s:7:"extends";N;s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:1;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:7:"Version";s:4:"kind";i:5;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:117:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/Version.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:13;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:19;s:9:"character";i:1;}}}s:13:"containerName";s:9:"Sabre\Uri";}s:4:"type";N;s:15:"declarationLine";s:13:"class Version";s:13:"documentation";s:56:"This class contains the version number for this package.";s:20:"signatureInformation";N;}s:26:"Sabre\Uri\Version::VERSION";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:26:"Sabre\Uri\Version::VERSION";s:7:"extends";N;s:8:"isMember";b:1;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:0;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:7:"VERSION";s:4:"kind";i:14;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:117:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/Version.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:18;s:9:"character";i:17;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:18;s:9:"character";i:34;}}}s:13:"containerName";s:17:"Sabre\Uri\Version";}s:4:"type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:15:"declarationLine";s:31:"public const VERSION = '2.3.2';";s:13:"documentation";s:20:"Full version number.";s:20:"signatureInformation";N;}s:19:"Sabre\Uri\resolve()";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:19:"Sabre\Uri\resolve()";s:7:"extends";N;s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:0;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:7:"resolve";s:4:"kind";i:12;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:22;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:98;s:9:"character";i:1;}}}s:13:"containerName";s:9:"Sabre\Uri";}s:4:"type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:15:"declarationLine";s:59:"function resolve(string $basePath, string $newPath): string";s:13:"documentation";s:164:"Resolves relative urls, like a browser would.

This function takes a basePath, which itself _may_ also be relative, and
then applies the relative path on top of it.";s:20:"signatureInformation";O:43:"LanguageServerProtocol\SignatureInformation":4:{s:5:"label";s:35:"(string $basePath, string $newPath)";s:13:"documentation";s:164:"Resolves relative urls, like a browser would.

This function takes a basePath, which itself _may_ also be relative, and
then applies the relative path on top of it.";s:10:"parameters";a:2:{i:0;O:43:"LanguageServerProtocol\ParameterInformation":2:{s:5:"label";s:16:"string $basePath";s:13:"documentation";N;}i:1;O:43:"LanguageServerProtocol\ParameterInformation":2:{s:5:"label";s:15:"string $newPath";s:13:"documentation";N;}}s:15:"activeParameter";N;}}s:21:"Sabre\Uri\normalize()";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:21:"Sabre\Uri\normalize()";s:7:"extends";N;s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:0;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:9:"normalize";s:4:"kind";i:12;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:111;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:164;s:9:"character";i:1;}}}s:13:"containerName";s:9:"Sabre\Uri";}s:4:"type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:15:"declarationLine";s:39:"function normalize(string $uri): string";s:13:"documentation";s:250:"Takes a URI or partial URI as its argument, and normalizes it.

After normalizing a URI, you can safely compare it to other URIs.
This function will for instance convert a %7E into a tilde, according to
rfc3986.

It will also change a %3a into a %3A.";s:20:"signatureInformation";O:43:"LanguageServerProtocol\SignatureInformation":4:{s:5:"label";s:13:"(string $uri)";s:13:"documentation";s:250:"Takes a URI or partial URI as its argument, and normalizes it.

After normalizing a URI, you can safely compare it to other URIs.
This function will for instance convert a %7E into a tilde, according to
rfc3986.

It will also change a %3a into a %3A.";s:10:"parameters";a:1:{i:0;O:43:"LanguageServerProtocol\ParameterInformation":2:{s:5:"label";s:11:"string $uri";s:13:"documentation";N;}}s:15:"activeParameter";N;}}s:17:"Sabre\Uri\parse()";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:17:"Sabre\Uri\parse()";s:7:"extends";N;s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:0;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:5:"parse";s:4:"kind";i:12;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:183;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:227;s:9:"character";i:1;}}}s:13:"containerName";s:9:"Sabre\Uri";}s:4:"type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:15:"declarationLine";s:34:"function parse(string $uri): array";s:13:"documentation";s:525:"Parses a URI and returns its individual components.

This method largely behaves the same as PHP's parse_url, except that it will
return an array with all the array keys, including the ones that are not
set by parse_url, which makes it a bit easier to work with.

Unlike PHP's parse_url, it will also convert any non-ascii characters to
percent-encoded strings. PHP's parse_url corrupts these characters on OS X.

In the return array, key "port" is an int value. Other keys have a string value.
"Unused" keys have value null.";s:20:"signatureInformation";O:43:"LanguageServerProtocol\SignatureInformation":4:{s:5:"label";s:13:"(string $uri)";s:13:"documentation";s:525:"Parses a URI and returns its individual components.

This method largely behaves the same as PHP's parse_url, except that it will
return an array with all the array keys, including the ones that are not
set by parse_url, which makes it a bit easier to work with.

Unlike PHP's parse_url, it will also convert any non-ascii characters to
percent-encoded strings. PHP's parse_url corrupts these characters on OS X.

In the return array, key "port" is an int value. Other keys have a string value.
"Unused" keys have value null.";s:10:"parameters";a:1:{i:0;O:43:"LanguageServerProtocol\ParameterInformation":2:{s:5:"label";s:11:"string $uri";s:13:"documentation";N;}}s:15:"activeParameter";N;}}s:17:"Sabre\Uri\build()";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:17:"Sabre\Uri\build()";s:7:"extends";N;s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:0;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:5:"build";s:4:"kind";i:12;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:235;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:270;s:9:"character";i:1;}}}s:13:"containerName";s:9:"Sabre\Uri";}s:4:"type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:15:"declarationLine";s:36:"function build(array $parts): string";s:13:"documentation";s:100:"This function takes the components returned from PHP's parse_url, and uses
it to generate a new uri.";s:20:"signatureInformation";O:43:"LanguageServerProtocol\SignatureInformation":4:{s:5:"label";s:38:"(array<string,int|string|null> $parts)";s:13:"documentation";s:100:"This function takes the components returned from PHP's parse_url, and uses
it to generate a new uri.";s:10:"parameters";a:1:{i:0;O:43:"LanguageServerProtocol\ParameterInformation":2:{s:5:"label";s:36:"array<string,int|string|null> $parts";s:13:"documentation";s:0:"";}}s:15:"activeParameter";N;}}s:17:"Sabre\Uri\split()";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:17:"Sabre\Uri\split()";s:7:"extends";N;s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:0;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:5:"split";s:4:"kind";i:12;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:289;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:297;s:9:"character";i:1;}}}s:13:"containerName";s:9:"Sabre\Uri";}s:4:"type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";O:38:"phpDocumentor\Reflection\Types\Integer":0:{}s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:15:"declarationLine";s:35:"function split(string $path): array";s:13:"documentation";s:548:"Returns the 'dirname' and 'basename' for a path.

The reason there is a custom function for this purpose, is because
basename() is locale aware (behaviour changes if C locale or a UTF-8 locale
is used) and we need a method that just operates on UTF-8 characters.

In addition basename and dirname are platform aware, and will treat
backslash (\) as a directory separator on Windows.

This method returns the 2 components as an array.

If there is no dirname, it will return an empty string. Any / appearing at
the end of the string is stripped off.";s:20:"signatureInformation";O:43:"LanguageServerProtocol\SignatureInformation":4:{s:5:"label";s:14:"(string $path)";s:13:"documentation";s:548:"Returns the 'dirname' and 'basename' for a path.

The reason there is a custom function for this purpose, is because
basename() is locale aware (behaviour changes if C locale or a UTF-8 locale
is used) and we need a method that just operates on UTF-8 characters.

In addition basename and dirname are platform aware, and will treat
backslash (\) as a directory separator on Windows.

This method returns the 2 components as an array.

If there is no dirname, it will return an empty string. Any / appearing at
the end of the string is stripped off.";s:10:"parameters";a:1:{i:0;O:43:"LanguageServerProtocol\ParameterInformation":2:{s:5:"label";s:12:"string $path";s:13:"documentation";N;}}s:15:"activeParameter";N;}}s:27:"Sabre\Uri\_parse_fallback()";O:25:"LanguageServer\Definition":11:{s:3:"fqn";s:27:"Sabre\Uri\_parse_fallback()";s:7:"extends";N;s:8:"isMember";b:0;s:6:"roamed";b:0;s:8:"isStatic";b:0;s:17:"canBeInstantiated";b:0;s:17:"symbolInformation";O:40:"LanguageServerProtocol\SymbolInformation":4:{s:4:"name";s:15:"_parse_fallback";s:4:"kind";i:12;s:8:"location";O:31:"LanguageServerProtocol\Location":2:{s:3:"uri";s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";s:5:"range";O:28:"LanguageServerProtocol\Range":2:{s:5:"start";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:313;s:9:"character";i:0;}s:3:"end";O:31:"LanguageServerProtocol\Position":2:{s:4:"line";i:394;s:9:"character";i:1;}}}s:13:"containerName";s:9:"Sabre\Uri";}s:4:"type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:15:"declarationLine";s:44:"function _parse_fallback(string $uri): array";s:13:"documentation";s:355:"This function is another implementation of parse_url, except this one is
fully written in PHP.

The reason is that the PHP bug team is not willing to admit that there are
bugs in the parse_url implementation.

This function is only called if the main parse method fails. It's pretty
crude and probably slow, so the original parse_url is usually preferred.";s:20:"signatureInformation";O:43:"LanguageServerProtocol\SignatureInformation":4:{s:5:"label";s:13:"(string $uri)";s:13:"documentation";s:355:"This function is another implementation of parse_url, except this one is
fully written in PHP.

The reason is that the PHP bug team is not willing to admit that there are
bugs in the parse_url implementation.

This function is only called if the main parse method fails. It's pretty
crude and probably slow, so the original parse_url is usually preferred.";s:10:"parameters";a:1:{i:0;O:43:"LanguageServerProtocol\ParameterInformation":2:{s:5:"label";s:11:"string $uri";s:13:"documentation";N;}}s:15:"activeParameter";N;}}}s:10:"references";a:45:{s:27:"PhpCsFixer\Finder::create()";a:1:{i:0;s:124:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/.php-cs-fixer.dist.php";}s:17:"PhpCsFixer\Finder";a:1:{i:0;s:124:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/.php-cs-fixer.dist.php";}s:10:"PhpCsFixer";a:1:{i:0;s:124:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/.php-cs-fixer.dist.php";}s:7:"__DIR__";a:1:{i:0;s:124:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/.php-cs-fixer.dist.php";}s:17:"PhpCsFixer\Config";a:1:{i:0;s:124:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/.php-cs-fixer.dist.php";}s:29:"PhpCsFixer\Config->setRules()";a:1:{i:0;s:124:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/.php-cs-fixer.dist.php";}s:30:"PhpCsFixer\Config->setFinder()";a:1:{i:0;s:124:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/.php-cs-fixer.dist.php";}s:9:"Exception";a:1:{i:0;s:129:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/InvalidUriException.php";}s:17:"Sabre\Uri\parse()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:7:"parse()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:17:"Sabre\Uri\build()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:7:"build()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:21:"Sabre\Uri\is_string()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:11:"is_string()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:18:"Sabre\Uri\strlen()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:8:"strlen()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:19:"Sabre\Uri\strrpos()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:9:"strrpos()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:18:"Sabre\Uri\substr()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:8:"substr()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:19:"Sabre\Uri\explode()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:9:"explode()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:21:"Sabre\Uri\array_pop()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:11:"array_pop()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:19:"Sabre\Uri\implode()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:9:"implode()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:18:"Sabre\Uri\strpos()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:8:"strpos()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:17:"Sabre\Uri\ltrim()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:7:"ltrim()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:24:"Sabre\Uri\rawurlencode()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:14:"rawurlencode()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:24:"Sabre\Uri\rawurldecode()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:14:"rawurldecode()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:22:"Sabre\Uri\strtolower()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:12:"strtolower()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:33:"Sabre\Uri\preg_replace_callback()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:23:"preg_replace_callback()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:29:"Sabre\Uri\InvalidUriException";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:21:"Sabre\Uri\parse_url()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:11:"parse_url()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:27:"Sabre\Uri\_parse_fallback()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:17:"_parse_fallback()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:22:"Sabre\Uri\preg_match()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}s:12:"preg_match()";a:1:{i:0;s:119:"file:///home/23SP/23SP_haseebz/.vscode-server/extensions/zobo.php-intellisense-1.1.2/vendor/sabre/uri/lib/functions.php";}}s:8:"complete";b:1;s:14:"staticComplete";b:1;}